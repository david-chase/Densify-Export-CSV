v3.2
----
* Reverted back to token-based auth
* Abandoned container labels.  The amount of data it pulls -- even in a small environment -- is prohibitive.  Doesn't even work with the subscription client so no point trying to make it work here
* Added an instance type catalog.  Only includes AWS and Azure at the moment.  This surfaces a lot of details about the current and recommended instance type that previously weren't there
* Added the following fields to the Excel template that are all based on the instance catalog: Current Instance Category (Memory optimized, Compute optimized, General Purpose etc), Recom. Instance Category, Current Instance Platform (Intel/AMD/ARM), Recom. Instance Platform, Current Instance Arch. Year (Year the *oldest* chipset in this instance type was released), Recom. Instance Arch. Year, Current Instance Info (Web link to the CSP web site with instance tech details), Recom. Instance Info
* Added the field Instance Type Last Changed On which helps identify when a customer is implementing recommendations.
* Added the field Software Identified which corresponds to mswcName in DCE.  This field lists any software that was identified when running the Software Identification internal job.  Note that this field will be blank if a POP report has never been run, and will only be as current as the last time PM ran the Software Identification job.

v3.1
----
Container labels are now working, but they take a VERY long time to collect.
You must add the switch -labels at the end of your command-line if you want to parse container labels.  By default it will skip container labels.

v3.0
----
Rewrote the script and Excel file from scratch to be simpler and faster.
Now exports Public Cloud attributes so you can slice and dice based on the cloud tags you've mapped for your customer.
No longer uses a config file.  Just edit the .ps1 file to change your username and password.

v2.1
----
* No need to update data source anymore.  It just assumes the data files are named using the same convention as the .xlsm file.
* Reordered the columns in the Cloud tab for Brett.  Hi Brett!  :)
* In the Cloud Tab, the columns named "Current Monthly Cost" and "Recommended Monthly Cost" now INCLUDE predicted uptime.  This fixes the long-standing discrepancy between what's reported by the API versus what's reported by the UI.

v2.0
----
* Generates a new authentication token before each query.  This prevents timeouts for large instances
* Added a "filtering" tab to the spreadsheet so you can automatically apply some "low-hanging fruit" filters
* Updated the "Cloud" and "Containers" tables to be essentially customer-ready.  This means columns were given friendly names, unnecessary columns were hidden, dates were converted from Unix epoch time to Windows Date/Time.  Used a join query so account names are shown in a friendly format "(Number) Long name" instead of just a number.
* Added support for container labels using Attributes.  This slows down processing but makes it significantly more powerful.
* No longer uses a Subscription to collect Cloud Tags, uses Attributes instead.
* Can now ingest Attributes while querying the API.  Ingesting all attributes slows processing to a crawl so only supports certain ones.  Right now it ingests CPU Util %, Memory Util %, Resource (Cloud) Tags, Container Labels, Sizing Notes, and Container Info.
* Added a tab to spreadsheet that surfaces Attributes by EntityID.  Note that EntityID is the primary key used to link Attributes to data in all other tables.
* Added a config tab so it's easy to change your data source.  Just edit it on the config tab instead of manually modifying a bunch of queries.
* Added a Tags & Labels tab that features two Pivot Tables for summaries of cloud tags and container labels.

v0.91
------

* Removed a limit of no more than 3,000 supported Resource Tags.  Now supports up to 30,000.
* The program now outputs a third .CSV file named "Accounts.csv".  This is a list of all the AWS accounts, Azure subscriptions, or GCP projects that have been ingested into this subscription including their friendly names.  I added a new tab to the "qryInstance Analysis.xlsx" file that includes this data.
* If you specify CopyExcelTemplate=true in qryInstance.config it will look for a file named "qryInstance Analysis.template.xlsx in the script folder and rename it to match the naming format of your .csv output files.  So if your output files are named "2022-12-23 acmecorp *.csv" it will create a file called "2022-12-23 acmecorp Instance Output.xlsx"  This is only to save you some work renaming .xlsx files, you still need to update the data sources manually.  This is turned off in the default config file.